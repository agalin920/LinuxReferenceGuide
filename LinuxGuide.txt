//Change current directory
cd  <directory> //Makes directory input the current directory 
cd .. //Makes cd the parent directory 
cd ~  //Make cd the home directory (can also be used without ~) 
cd -  //Makes cd the previous directory

pwd //Prints working directory

//List content of directory
ls <directory> //Lists the contents of the directory
ls -l //Displays more detailed list
ls- a //Shows hidden directories (.file)
ls -la //Combination of both -l and -a

//Directory Stack
pushd <directory to go to> //Jumps to new directory by pushing into stack to later be popped to return to original directory
popd //Returns you to directory

//Command History
history //Returns the history of commands that have been used

//Search system for file
locate <filename>
updatedb //Update locate database

//File type
file <file> // Returns file type/extension

//Command Information
man <command> //Displays full manual 
whatis <command> //Returns short description
apropos <Query> //Returns all commands that are related to the query

//Create/Deleate Files
touch <filename> //Creates a file
rm <filename> //Deletes a file
rm * //Wildcard

//Concatenate Command
cat <filename> //Returns contents of file on terminal
cat >> <Filename> //Allows you to add whatever you type to add into the file
cat <file1> <file2> //Concatenates both files

//Copy files/direcotires
cp <file name> <Copy file name> //Copies a file into the current directory
cp -r  directory/ -file copy destination-(copies a whole directory)

//Move files (Rename File) (Insert contents from one file to another)
mv <oldfile name> <newfile name> //Renames file since no directory was specified
mv <filename> <file move directory> //Moves a file to a directory
mv <filename> <exsisiting filename> //Moves the content of the first file into the existing file
mv -b //Flag used to backup the file before a move or rename

//Create/Remove Directories
mkdir <directory name> //Creates a directory
rmdir <directory name> //Removes directory
rm -r <directory name> //Delete directory and its contents

//Displaying processes
top //shows top processes

//Killing processes
kill<processID> //Kills the process with specified ID
xkill //kills the window you click on

To fix harddrive

sudo ntfsfix /dev/sdb1

Text Navigation:

CTRL-A : Go to beggining of line
CTRL-E : Go to end of line
CTRL-R : History search
CTRL-C : Keyboard Interrupt

# :       Bash comment

Connect to IRC
/server server
/join channel

Install Deb package

sudo dpkg -i package


//SORT a file
sort <file to be sorted>
//Sort file and save
sort <file to be sorted> >> <New file name>

//Grep search words in file
grep(golbal regular expression print)
grep <Word to search> <file to be searched>
grep -i <Case sensitive word to search> <file to be searched>

//Change bash profile
nano ~/.bash_profile
(write commands in it)>echo "Hello Terminal User"
//Usually done for alias (alias pd="pwd")
(save it and apply)>   source ~/.bash_profile

//Git
git init (Initializ git in the folder)
git status (Status of the git)
git add <filename> (Add the file that is in the folder to the git)
git diff <filename> (Lists and colors the differences/changes in a file)
git commit -m <message for commit>(Permanently stores changes frin the staging area)
git log(chronological commits)
add -> commit ->push
git remote add origin <githuburl.git>
git push -u origin master //the -u saves the paramaters
git push
git pull //retrieve changes from origin master
git checkout -- <filename> //reverts files to last commit
git branch <branch name> //create new branch to do all your commits to before you push
git checkout <branch name> //swaps your branch from your default master branch
git merge <branch name> //merges the branch to your master branch *Be in master branch*
git branch -d <branch name> // deletes the branch


//How-To reboot your system if everything crashes

Ctrl+Alt+F2
Login with credentials
type reboot

//How to install python requirements.txt
sudo pip install -r requirements.txt

